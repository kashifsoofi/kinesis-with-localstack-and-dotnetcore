version: '3.7'

networks:
  demo_network:
    driver: bridge
    ipam:
      config:
        - subnet: 169.254.170.0/24

services:
  demo.producer:
    depends_on:
      - localstack-setup
    dns:
      - 169.254.170.3
    networks:
      demo_network:
        ipv4_address: 169.254.170.7

  demo.consumer:
    depends_on:
      - localstack-setup
    dns:
      - 169.254.170.3
    networks:
      demo_network:
        ipv4_address: 169.254.170.8

  demo.kcl.consumer:
    depends_on:
      - localstack-setup
    environment:
      - AWS_REGION=eu-west-1
      - AWS_SECRET_ACCESS_KEY=DUMMY_KEY
      - AWS_ACCESS_KEY_ID=DUMMY_KEY
    dns:
      - 169.254.170.3
    networks:
      demo_network:
        ipv4_address: 169.254.170.9

  coredns:
    build:
      context: ./coredns
    networks:
      demo_network:
        ipv4_address: 169.254.170.3

  localstack:
    image: localstack/localstack
    ports:
      - "4567-4597:4567-4597"
      - "${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}"
    environment:
      - SERVICES=kinesis,dynamodb
      - DEBUG=1
      - DATA_DIR=${DATA_DIR- }
      - PORT_WEB_UI=${PORT_WEB_UI- }
      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEFAULT_REGION=eu-west-1
      - HOSTNAME=localstack
      - HOSTNAME_EXTERNAL=localstack
    volumes:
      - localstackdata:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    dns:
      - 169.254.170.3
    networks:
      demo_network:
        ipv4_address: 169.254.170.5

  localstack-setup:
    build:
      context: ./localstack-setup
    depends_on:
      - localstack
    environment:
      - "AWS_SECRET_ACCESS_KEY=DUMMY_KEY"
      - "AWS_ACCESS_KEY_ID=DUMMY_KEY"
    dns:
      - 169.254.170.3
    networks:
      demo_network:
        ipv4_address: 169.254.170.6

volumes:
  localstackdata:
  